# Generated by Django 4.2.23 on 2025-09-20 05:05

from django.db import migrations
import json


def convert_tag_to_array(apps, schema_editor):
    """Convert existing string tags to arrays with better error handling"""
    ArtistProfile = apps.get_model('artists', 'ArtistProfile')

    for artist in ArtistProfile.objects.all():
        if artist.tag is not None:
            try:
                # If it's already a list, leave it as is
                if isinstance(artist.tag, list):
                    continue

                # If it's a string, try to parse as JSON first
                if isinstance(artist.tag, str):
                    # Handle common invalid JSON cases
                    if artist.tag.strip() == '' or artist.tag.lower() in ['null', 'none', 'invalid', 'invalid value.']:
                        artist.tag = []
                    else:
                        try:
                            # Try to parse as JSON
                            parsed = json.loads(artist.tag)
                            if isinstance(parsed, list):
                                artist.tag = parsed
                            else:
                                # It's a string that looks like JSON but isn't an array
                                artist.tag = [artist.tag.strip()]
                        except (json.JSONDecodeError, TypeError):
                            # It's a plain string
                            artist.tag = [artist.tag.strip()]
                    artist.save()
            except Exception:
                # If anything goes wrong, set to empty array
                artist.tag = []
                artist.save()


def convert_array_to_string(apps, schema_editor):
    """Reverse migration: convert arrays back to strings"""
    ArtistProfile = apps.get_model('artists', 'ArtistProfile')

    for artist in ArtistProfile.objects.all():
        if isinstance(artist.tag, list):
            # Convert first tag to string, or empty string if no tags
            artist.tag = artist.tag[0] if artist.tag else ''
            artist.save()


class Migration(migrations.Migration):

    dependencies = [
        ('artists', '0035_update_tag_field_to_json'),
    ]

    operations = [
        migrations.RunPython(convert_tag_to_array, convert_array_to_string),
    ]
